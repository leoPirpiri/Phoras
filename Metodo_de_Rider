import pylab as pl
import numpy as num

def ridders(F, xe, xd, errto, imax):
     F = eval('lambda x:' + F)
    
     x = 0
     iterCount = 0
     errno = 1     
     dominio=[]; imagem=[]
     while errno > errto and iterCount < imax:
         
          fd = F(xd)
          fe = F(xe)
          d0 = abs(fd - fe)
          x = xd - fd*(xe-xd)/(fe - fd)
          fx = F(x)
 
          a = (fe - fx)/(fx - fd)
          b = (fe - fx)/(fe - a*fx)
          beta = b - 1
          alfa = a - 1
          lnb = beta - beta*beta/2 + beta*beta*beta/3
          lna = alfa - alfa*alfa/2 + alfa*alfa*alfa/3
          root = xe + d0*lnb/lna
          froot = F(root)
 
          #Guarda valores de dominio e imagem
          dominio.append(xe)
          dominio.append(xd)
          imagem.append(fe)
          imagem.append(fd)
    
    
          if fe * fx < 0:
               if xe < root and root < x:
                    if fx * froot < 0:
                         xe = root
                         xd = x
                    else:
                         xd = root
               else:
                    xd = x
          elif fe * fx > 0:
               if x < root and root < xd:
                    if fx * froot < 0:
                         xe = x
                         xd = root
                    else:
                         xe = root
                         fe = froot
               else:
                    xe = x
                    fe = fx
          else:
               if fe == 0:
                    x = xe
               break
 
          errno = abs(xd - xe)
          iterCount += 1
     
     
     #GrÃ¡fico
     pl.plot(dominio,imagem,color = 'red')
     pl.scatter(dominio,imagem)
     pl.legend
     pl.grid()
     #pl.axis([xe,xd,-,])
     pl.title('GrÃ¡fico')
     pl.savefig('Grafico.png')
     pl.show()
        
     return x
     
ridders('x**2', -5, 3,10**(-3),9)
